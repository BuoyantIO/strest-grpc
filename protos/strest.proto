syntax = "proto3";

package strest;

service Responder {
  // Sends a greeting
  rpc Get(ResponseSpec) returns (ResponseReply) {}
  rpc StreamingGet(stream StreamingResponseSpec) returns (stream ResponseReply) {}
}

message ResponseSpec {
  // How many bytes we expect in a response?
  int32 length = 1;

  // How long (in milliseconds) we want the response to wait.
  int64 latency = 2;

  float errorRate = 3;

  // Unused, arbitrary data. Allows for arbitrarily large requests.
  bytes data = 4;
}

message StreamingResponseSpec {
  // how many responses to send.
  int32 count = 1;
  // distributions for latency and body size
  map<int32, int64> latencyPercentiles = 2;
  map<int32, int64> lengthPercentiles = 3;
  float errorRate = 4;
}

// The response message containing the greetings
message ResponseReply {
  string body = 1;
  // Time last frame sent (0 if not a streaming response)
  int64 lastFrameSent = 2;
  // Server time of current frame sent.
  int64 currentFrameSent = 3;
}
